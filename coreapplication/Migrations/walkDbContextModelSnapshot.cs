// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using coreapplication.Data;

#nullable disable

namespace coreapplication.Migrations
{
    [DbContext(typeof(walkDbContext))]
    partial class walkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("coreapplication.Model.Domain.Dificulity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("difficulities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("007c0611-5674-4f33-b145-41c5d20a2737"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("599388f1-86ef-4427-acef-03e3be6d6b14"),
                            Name = "difficult"
                        });
                });

            modelBuilder.Entity("coreapplication.Model.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regionimageurl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("566cbe50-640a-4fe7-8200-d567a16fe723"),
                            Code = "def",
                            Name = "Easy",
                            Regionimageurl = "image/s.gif"
                        },
                        new
                        {
                            Id = new Guid("4d3a7665-da45-4466-9033-230b2156f592"),
                            Code = "ghi",
                            Name = "difficult",
                            Regionimageurl = "images/u.gif"
                        });
                });

            modelBuilder.Entity("coreapplication.Model.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DificulityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Lengthinkm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("walkimageurl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DificulityId");

                    b.HasIndex("RegionId");

                    b.ToTable("walks");
                });

            modelBuilder.Entity("coreapplication.Model.Domain.Walk", b =>
                {
                    b.HasOne("coreapplication.Model.Domain.Dificulity", "Dificulity")
                        .WithMany()
                        .HasForeignKey("DificulityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("coreapplication.Model.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dificulity");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
